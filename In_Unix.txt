from pyspark.sql import SparkSession
from pyspark.sql import Row
from pyspark.sql import functions as F
from pyspark.sql.window import Window

# List of genre names based on the u.item file structure
genre_names = [
    "unknown", "Action", "Adventure", "Animation", "Children's", "Comedy",
    "Crime", "Documentary", "Drama", "Fantasy", "Film-Noir", "Horror",
    "Musical", "Mystery", "Romance", "Sci-Fi", "Thriller", "War", "Western"
]

def parse_rating(line):
    fields = line.split('\t')
    return Row(user_id=int(fields[0]), movie_id=int(fields[1]), rating=int(fields[2]), timestamp=int(fields[3]))

def parse_movie(line):
    fields = line.split('|')
    genres = [genre_names[i - 5] for i in range(5, 24) if fields[i] == '1']
    return Row(movie_id=int(fields[0]), title=fields[1], genres=genres)

def parse_user(line):
    fields = line.split('|')
    return Row(user_id=int(fields[0]), age=int(fields[1]), gender=fields[2], occupation=fields[3], zip_code=fields[4])
    
def write_to_cassandra(dataframe, table, keyspace):
    dataframe.write \
        .format("org.apache.spark.sql.cassandra") \
        .options(table=table, keyspace=keyspace) \
        .mode("append") \
        .save()

def read_from_cassandra(table, keyspace):
    return spark.read \
        .format("org.apache.spark.sql.cassandra") \
        .options(table=table, keyspace=keyspace) \
        .load()

if __name__ == "__main__":
    # Create a SparkSession
    spark = SparkSession.builder \
        .appName("MovieLensAnalysis") \
        .config("spark.cassandra.connection.host", "127.0.0.1") \
        .getOrCreate()

    # Load the ratings data
    ratings_lines = spark.sparkContext.textFile("hdfs:///user/maria_dev/irffan/ml-100k/u.data")
    ratings = ratings_lines.map(parse_rating)
    ratingsDataset = spark.createDataFrame(ratings)

    # Load the movies data
    movies_lines = spark.sparkContext.textFile("hdfs:///user/maria_dev/irffan/ml-100k/u.item")
    movies = movies_lines.map(parse_movie)
    moviesDataset = spark.createDataFrame(movies)

    # Load the users data
    users_lines = spark.sparkContext.textFile("hdfs:///user/maria_dev/irffan/ml-100k/u.user")
    users = users_lines.map(parse_user)
    usersDataset = spark.createDataFrame(users)

    # Calculate the average rating for each movie
    averageRatings = ratingsDataset.groupBy("movie_id").agg(F.avg("rating").alias("avg_rating"))

    # Join with the movie titles
    movieRatings = averageRatings.join(moviesDataset, "movie_id").select("movie_id", "title", "avg_rating")

    # Display the average rating for each movie (top 10 without sorting)
    print("Average rating for each movie:")
    movieRatings.show(10, truncate=False)

    # Calculate the average rating and count of ratings for each movie
    movieStats = ratingsDataset.groupBy("movie_id").agg(
        F.avg("rating").alias("avg_rating"),
        F.count("rating").alias("rating_count")
    )

    # Join with the movie titles
    movieRatingsWithCount = movieStats.join(moviesDataset, "movie_id").select("movie_id", "title", "avg_rating", "rating_count")

    # Identify the top ten movies with the highest average rating 
    topTenMovies = movieRatingsWithCount.orderBy(F.desc("avg_rating")).limit(10).select("movie_id", "title", "avg_rating", "rating_count")

    # Display the top ten movies with the highest rating count
    print("Top ten movies with the highest rating average:")
    topTenMovies.show(truncate=False)
    
    # Identify the top ten movies with the highest rating count
    topTenMoviesRatingCount = movieRatingsWithCount.orderBy(F.desc("rating_count")).limit(10).select("movie_id", "title", "avg_rating", "rating_count")

    # Display the top ten movies with the highest rating count
    print("Top ten movies with the highest rating count:")
    topTenMoviesRatingCount.show(truncate=False)

    # Filter out movies with less than 10 ratings
    popularMovies = movieStats.filter("rating_count > 10")

    # Join with the movie titles
    movieRatingsWithCount1 = popularMovies.join(moviesDataset, "movie_id").select("movie_id", "title", "avg_rating", "rating_count")

    # Identify the movie with the highest average rating
    topMovie = movieRatingsWithCount1.orderBy(F.desc("avg_rating")).limit(10).select("movie_id", "title", "avg_rating", "rating_count")

    # Display the movie with the highest average rating
    print("Movie with the highest average rating (with more than 10 ratings count):")
    topMovie.show(truncate=False)

    # Find the users who have rated at least 50 movies
    usersWith50Ratings = ratingsDataset.groupBy("user_id").agg(F.count("rating").alias("num_ratings")).filter("num_ratings >= 50")

    # Explode genres array for easier aggregation
    explodedMoviesDataset = moviesDataset.withColumn("genre", F.explode(F.col("genres")))

    # Join datasets to get user, rating, and genre information
    usersGenres = ratingsDataset.join(explodedMoviesDataset, "movie_id").join(usersWith50Ratings, "user_id")

    # Aggregate to find the count of ratings per genre for each user
    usersGenresCount = usersGenres.groupBy("user_id", "genre").agg(F.count("genre").alias("genre_count"))

    # Window function to identify favourite genre(s) for each user
    windowSpec = Window.partitionBy("user_id").orderBy(F.desc("genre_count"))

    favouriteGenres = usersGenresCount.withColumn("rank", F.rank().over(windowSpec)).filter(F.col("rank") == 1).drop("rank")

    # Join with usersDataset to get gender
    favouriteGenresWithGender = favouriteGenres.join(usersDataset, "user_id").select("user_id", "gender", "genre", "genre_count")

    # Display the users who have rated at least 50 movies, their favourite movie genres, and gender (top 10)
    print("Top ten users who have rated at least 50 movies, their favourite movie genres, and gender:")
    favouriteGenresWithGender.show(10, truncate=False)

    # Find all the users with age less than 20 years old
    youngUsers = usersDataset.filter(usersDataset["age"] < 20)

    # Display the users with age less than 20 years old (top 10)
    print("Top ten users with age less than 20 years old:")
    youngUsers.show(10, truncate=False)

    # Find all the users who have the occupation "scientist" and their age is between 30 and 40 years old
    scientistUsers = usersDataset.filter((usersDataset["occupation"] == "scientist") & (usersDataset["age"] >= 30) & (usersDataset["age"] <= 40))

    # Display the users who have the occupation "scientist" and their age is between 30 and 40 years old (top 10)
    print("Top ten users who have the occupation 'scientist' and their age is between 30 and 40 years old:")
    scientistUsers.show(10, truncate=False)
    
    # Write the movieRatings DataFrame into Cassandra keyspace
    write_to_cassandra(movieRatings, "movie_ratings", "movielens")

    # Write the topTenMovies DataFrame into Cassandra keyspace
    write_to_cassandra(topTenMovies, "top_ten_movies_avg_rating", "movielens")

    # Write the topTenMoviesRatingCount DataFrame into Cassandra keyspace
    write_to_cassandra(topTenMoviesRatingCount, "top_ten_movies_rating_count", "movielens")

    # Write the movieRatingsWithCount1 DataFrame into Cassandra keyspace
    write_to_cassandra(movieRatingsWithCount1, "popular_movies", "movielens")

    # Write the favouriteGenresWithGender DataFrame into Cassandra keyspace
    write_to_cassandra(favouriteGenresWithGender, "favourite_genres", "movielens")

    # Write the youngUsers DataFrame into Cassandra keyspace
    write_to_cassandra(youngUsers, "young_users", "movielens")

    # Write the scientistUsers DataFrame into Cassandra keyspace
    write_to_cassandra(scientistUsers, "scientist_users", "movielens")

    # Read the tables back from Cassandra into new DataFrames
    movieRatingsFromCassandra = read_from_cassandra("movie_ratings", "movielens")
    topTenMoviesFromCassandra = read_from_cassandra("top_ten_movies_avg_rating", "movielens")
    topTenMoviesRatingCountFromCassandra = read_from_cassandra("top_ten_movies_rating_count", "movielens")
    popularMoviesFromCassandra = read_from_cassandra("popular_movies", "movielens")
    favouriteGenresFromCassandra = read_from_cassandra("favourite_genres", "movielens")
    youngUsersFromCassandra = read_from_cassandra("young_users", "movielens")
    scientistUsersFromCassandra = read_from_cassandra("scientist_users", "movielens")

    # Display the DataFrames read back from Cassandra
    print("Movie ratings from Cassandra:")
    movieRatingsFromCassandra.show(10, truncate=False)

    print("Top ten movies by average rating from Cassandra:")
    topTenMoviesFromCassandra.show(10, truncate=False)

    print("Top ten movies by rating count from Cassandra:")
    topTenMoviesRatingCountFromCassandra.show(10, truncate=False)

    print("Popular movies from Cassandra:")
    popularMoviesFromCassandra.show(10, truncate=False)

    print("Favourite genres from Cassandra:")
    favouriteGenresFromCassandra.show(10, truncate=False)

    print("Young users from Cassandra:")
    youngUsersFromCassandra.show(10, truncate=False)

    print("Scientist users from Cassandra:")
    scientistUsersFromCassandra.show(10, truncate=False)

    # Stop the SparkSession
    spark.stop()


Using username "maria_dev".
maria_dev@127.0.0.1's password:
Last login: Thu Jun 20 06:45:15 2024 from 172.18.0.3
[maria_dev@sandbox-hdp ~]$ su root
Password:
[root@sandbox-hdp maria_dev]# service cassandra start
Starting cassandra (via systemctl):                        [  OK  ]
[root@sandbox-hdp maria_dev]# cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.0.9 | CQL spec 3.4.0 | Native protocol v4]
Use HELP for help.
cqlsh> CREATE KEYSPACE IF NOT EXISTS movielens WITH replication = {'class': 'Sim                                                                                                                                                             pleStrategy', 'replication_factor': '1'};
cqlsh> CREATE TABLE IF NOT EXISTS movielens.movie_ratings (
   ...     movie_id int,
   ...     title text,
   ...     avg_rating float,
   ...     PRIMARY KEY (movie_id)
   ... );
cqlsh> CREATE TABLE IF NOT EXISTS movielens.top_ten_movies_avg_rating (
   ...     movie_id int,
   ...     title text,
   ...     avg_rating float,
   ...     rating_count int,
   ...     PRIMARY KEY (movie_id)
   ... );
cqlsh> CREATE TABLE IF NOT EXISTS movielens.top_ten_movies_rating_count (
   ...     movie_id int,
   ...     title text,
   ...     avg_rating float,
   ...     rating_count int,
   ...     PRIMARY KEY (movie_id)
   ... );
cqlsh> CREATE TABLE IF NOT EXISTS movielens.popular_movies (
   ...     movie_id int,
   ...     title text,
   ...     avg_rating float,
   ...     rating_count int,
   ...     PRIMARY KEY (movie_id)
   ... );
cqlsh> CREATE TABLE IF NOT EXISTS movielens.favourite_genres (
   ...     user_id int,
   ...     gender text,
   ...     genre text,
   ...     genre_count int,
   ...     PRIMARY KEY (user_id, genre)
   ... );
cqlsh> CREATE TABLE IF NOT EXISTS movielens.young_users (
   ...     user_id int,
   ...     age int,
   ...     gender text,
   ...     occupation text,
   ...     zip_code text,
   ...     PRIMARY KEY (user_id)
   ... );
cqlsh> CREATE TABLE IF NOT EXISTS movielens.scientist_users (
   ...     user_id int,
   ...     age int,
   ...     gender text,
   ...     occupation text,
   ...     zip_code text,
   ...     PRIMARY KEY (user_id)
   ... );
cqlsh> exit
[root@sandbox-hdp maria_dev]# exit
exit
[maria_dev@sandbox-hdp ~]$ vi a440.py
[maria_dev@sandbox-hdp ~]$ spark-submit --packages com.datastax.spark:spark-cass                                                                                                                                                             andra-connector_2.11:2.3.0 a440.py
SPARK_MAJOR_VERSION is set to 2, using Spark2
Ivy Default Cache set to: /home/maria_dev/.ivy2/cache
The jars for the packages stored in: /home/maria_dev/.ivy2/jars
:: loading settings :: url = jar:file:/usr/hdp/2.6.5.0-292/spark2/jars/ivy-2.4.0                                                                                                                                                             .jar!/org/apache/ivy/core/settings/ivysettings.xml
com.datastax.spark#spark-cassandra-connector_2.11 added as a dependency
:: resolving dependencies :: org.apache.spark#spark-submit-parent;1.0
        confs: [default]
        found com.datastax.spark#spark-cassandra-connector_2.11;2.3.0 in central
        found com.twitter#jsr166e;1.1.0 in central
        found commons-beanutils#commons-beanutils;1.9.3 in central
        found commons-collections#commons-collections;3.2.2 in central
        found joda-time#joda-time;2.3 in central
        found org.joda#joda-convert;1.2 in central
        found io.netty#netty-all;4.0.33.Final in central
        found org.scala-lang#scala-reflect;2.11.8 in central
:: resolution report :: resolve 261ms :: artifacts dl 7ms
        :: modules in use:
        com.datastax.spark#spark-cassandra-connector_2.11;2.3.0 from central in                                                                                                                                                              [default]
        com.twitter#jsr166e;1.1.0 from central in [default]
        commons-beanutils#commons-beanutils;1.9.3 from central in [default]
        commons-collections#commons-collections;3.2.2 from central in [default]
        io.netty#netty-all;4.0.33.Final from central in [default]
        joda-time#joda-time;2.3 from central in [default]
        org.joda#joda-convert;1.2 from central in [default]
        org.scala-lang#scala-reflect;2.11.8 from central in [default]
        ---------------------------------------------------------------------
        |                  |            modules            ||   artifacts   |
        |       conf       | number| search|dwnlded|evicted|| number|dwnlded|
        ---------------------------------------------------------------------
        |      default     |   8   |   0   |   0   |   0   ||   8   |   0   |
        ---------------------------------------------------------------------
:: retrieving :: org.apache.spark#spark-submit-parent
        confs: [default]
        0 artifacts copied, 8 already retrieved (0kB/5ms)
Average rating for each movie:
+--------+----------------------------------------------------------------------                                                                                                                                                             -----+------------------+
|movie_id|title                                                                                                                                                                                                                                   |avg_rating        |
+--------+----------------------------------------------------------------------                                                                                                                                                             -----+------------------+
|26      |Brothers McMullen, The (1995)                                                                                                                                                                                                           |3.452054794520548 |
|29      |Batman Forever (1995)                                                                                                                                                                                                                   |2.6666666666666665|
|474     |Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb (                                                                                                                                                             1963)|4.252577319587629 |
|964     |Month by the Lake, A (1995)                                                                                                                                                                                                             |3.3333333333333335|
|1677    |Sweet Nothing (1995)                                                                                                                                                                                                                    |3.0               |
|65      |What's Eating Gilbert Grape (1993)                                                                                                                                                                                                      |3.5391304347826087|
|191     |Amadeus (1984)                                                                                                                                                                                                                          |4.163043478260869 |
|418     |Cinderella (1950)                                                                                                                                                                                                                       |3.5813953488372094|
|541     |Mortal Kombat (1995)                                                                                                                                                                                                                    |2.877551020408163 |
|558     |Heavenly Creatures (1994)                                                                                                                                                                                                               |3.6714285714285713|
+--------+----------------------------------------------------------------------                                                                                                                                                             -----+------------------+
only showing top 10 rows

Top ten movies with the highest rating average:
+--------+-------------------------------------------------+----------+---------                                                                                                                                                             ---+
|movie_id|title                                            |avg_rating|rating_co                                                                                                                                                             unt|
+--------+-------------------------------------------------+----------+---------                                                                                                                                                             ---+
|1189    |Prefontaine (1997)                               |5.0       |3                                                                                                                                                                        |
|1467    |Saint of Fort Washington, The (1993)             |5.0       |2                                                                                                                                                                        |
|1201    |Marlene Dietrich: Shadow and Light (1996)        |5.0       |1                                                                                                                                                                        |
|1599    |Someone Else's America (1995)                    |5.0       |1                                                                                                                                                                        |
|814     |Great Day in Harlem, A (1994)                    |5.0       |1                                                                                                                                                                        |
|1653    |Entertaining Angels: The Dorothy Day Story (1996)|5.0       |1                                                                                                                                                                        |
|1122    |They Made Me a Criminal (1939)                   |5.0       |1                                                                                                                                                                        |
|1500    |Santa with Muscles (1996)                        |5.0       |2                                                                                                                                                                        |
|1536    |Aiqing wansui (1994)                             |5.0       |1                                                                                                                                                                        |
|1293    |Star Kid (1997)                                  |5.0       |3                                                                                                                                                                        |
+--------+-------------------------------------------------+----------+---------                                                                                                                                                             ---+

Top ten movies with the highest rating count:
+--------+-----------------------------+------------------+------------+
|movie_id|title                        |avg_rating        |rating_count|
+--------+-----------------------------+------------------+------------+
|50      |Star Wars (1977)             |4.3584905660377355|583         |
|258     |Contact (1997)               |3.8035363457760316|509         |
|100     |Fargo (1996)                 |4.155511811023622 |508         |
|181     |Return of the Jedi (1983)    |4.007889546351085 |507         |
|294     |Liar Liar (1997)             |3.156701030927835 |485         |
|286     |English Patient, The (1996)  |3.656964656964657 |481         |
|288     |Scream (1996)                |3.4414225941422596|478         |
|1       |Toy Story (1995)             |3.8783185840707963|452         |
|300     |Air Force One (1997)         |3.6310904872389793|431         |
|121     |Independence Day (ID4) (1996)|3.438228438228438 |429         |
+--------+-----------------------------+------------------+------------+

Movie with the highest average rating (with more than 10 ratings count):
+--------+------------------------------------------------------+---------------                                                                                                                                                             ---+------------+
|movie_id|title                                                 |avg_rating                                                                                                                                                                     |rating_count|
+--------+------------------------------------------------------+---------------                                                                                                                                                             ---+------------+
|408     |Close Shave, A (1995)                                 |4.4910714285714                                                                                                                                                             29 |112         |
|318     |Schindler's List (1993)                               |4.4664429530201                                                                                                                                                             35 |298         |
|169     |Wrong Trousers, The (1993)                            |4.4661016949152                                                                                                                                                             54 |118         |
|483     |Casablanca (1942)                                     |4.4567901234567                                                                                                                                                             9  |243         |
|114     |Wallace & Gromit: The Best of Aardman Animation (1996)|4.4477611940298                                                                                                                                                             51 |67          |
|64      |Shawshank Redemption, The (1994)                      |4.4452296819787                                                                                                                                                             98 |283         |
|603     |Rear Window (1954)                                    |4.3875598086124                                                                                                                                                             405|209         |
|12      |Usual Suspects, The (1995)                            |4.3857677902621                                                                                                                                                             73 |267         |
|50      |Star Wars (1977)                                      |4.3584905660377                                                                                                                                                             355|583         |
|178     |12 Angry Men (1957)                                   |4.344                                                                                                                                                                          |125         |
+--------+------------------------------------------------------+---------------                                                                                                                                                             ---+------------+

Top ten users who have rated at least 50 movies, their favourite movie genres, a                                                                                                                                                             nd gender:
+-------+------+------+-----------+
|user_id|gender|genre |genre_count|
+-------+------+------+-----------+
|26     |M     |Drama |41         |
|474    |M     |Drama |166        |
|65     |F     |Drama |46         |
|541    |F     |Comedy|52         |
|222    |M     |Comedy|131        |
|270    |F     |Drama |56         |
|293    |M     |Drama |165        |
|938    |F     |Comedy|40         |
|243    |M     |Drama |59         |
|367    |M     |Horror|31         |
+-------+------+------+-----------+
only showing top 10 rows

Top ten users with age less than 20 years old:
+---+------+-------------+-------+--------+
|age|gender|occupation   |user_id|zip_code|
+---+------+-------------+-------+--------+
|7  |M     |student      |30     |55436   |
|19 |F     |student      |36     |93117   |
|18 |F     |student      |52     |55105   |
|16 |M     |none         |57     |84010   |
|17 |M     |student      |67     |60402   |
|19 |M     |student      |68     |22904   |
|15 |M     |student      |101    |05146   |
|19 |M     |student      |110    |77840   |
|13 |M     |other        |142    |48118   |
|15 |M     |entertainment|179    |20755   |
+---+------+-------------+-------+--------+
only showing top 10 rows

Top ten users who have the occupation 'scientist' and their age is between 30 an                                                                                                                                                             d 40 years old:
+---+------+----------+-------+--------+
|age|gender|occupation|user_id|zip_code|
+---+------+----------+-------+--------+
|38 |M     |scientist |40     |27514   |
|39 |M     |scientist |71     |98034   |
|39 |M     |scientist |74     |T8H1N   |
|39 |M     |scientist |107    |60466   |
|33 |M     |scientist |183    |27708   |
|33 |M     |scientist |272    |53706   |
|40 |M     |scientist |309    |70802   |
|37 |M     |scientist |337    |10522   |
|38 |M     |scientist |430    |98199   |
|31 |M     |scientist |538    |21010   |
+---+------+----------+-------+--------+
only showing top 10 rows

Movie ratings from Cassandra:
+--------+----------+--------------------------------------------------+
|movie_id|avg_rating|title                                             |
+--------+----------+--------------------------------------------------+
|497     |3.8382354 |Bringing Up Baby (1938)                           |
|1328    |3.1666667 |Of Love and Shadows (1994)                        |
|13      |3.4184783 |Mighty Aphrodite (1995)                           |
|379     |2.9767442 |Tales From the Crypt Presents: Demon Knight (1995)|
|169     |4.4661016 |Wrong Trousers, The (1993)                        |
|1458    |4.0       |Damsel in Distress, A (1937)                      |
|1603    |3.0       |Angela (1995)                                     |
|588     |3.7920792 |Beauty and the Beast (1991)                       |
|30      |3.945946  |Belle de jour (1967)                              |
|1475    |2.875     |Bhaji on the Beach (1993)                         |
+--------+----------+--------------------------------------------------+
only showing top 10 rows

Top ten movies by average rating from Cassandra:
+--------+----------+------------+----------------------------------------------                                                                                                                                                             ---+
|movie_id|avg_rating|rating_count|title                                                                                                                                                                                                         |
+--------+----------+------------+----------------------------------------------                                                                                                                                                             ---+
|1500    |5.0       |2           |Santa with Muscles (1996)                                                                                                                                                                                     |
|1536    |5.0       |1           |Aiqing wansui (1994)                                                                                                                                                                                          |
|1467    |5.0       |2           |Saint of Fort Washington, The (1993)                                                                                                                                                                          |
|1201    |5.0       |1           |Marlene Dietrich: Shadow and Light (1996)                                                                                                                                                                     |
|1293    |5.0       |3           |Star Kid (1997)                                                                                                                                                                                               |
|1122    |5.0       |1           |They Made Me a Criminal (1939)                                                                                                                                                                                |
|1599    |5.0       |1           |Someone Else's America (1995)                                                                                                                                                                                 |
|1189    |5.0       |3           |Prefontaine (1997)                                                                                                                                                                                            |
|814     |5.0       |1           |Great Day in Harlem, A (1994)                                                                                                                                                                                 |
|1653    |5.0       |1           |Entertaining Angels: The Dorothy Day Story (19                                                                                                                                                             96)|
+--------+----------+------------+----------------------------------------------                                                                                                                                                             ---+

Top ten movies by rating count from Cassandra:
+--------+----------+------------+-----------------------------+
|movie_id|avg_rating|rating_count|title                        |
+--------+----------+------------+-----------------------------+
|1       |3.8783185 |452         |Toy Story (1995)             |
|181     |4.0078897 |507         |Return of the Jedi (1983)    |
|294     |3.156701  |485         |Liar Liar (1997)             |
|50      |4.3584905 |583         |Star Wars (1977)             |
|286     |3.6569645 |481         |English Patient, The (1996)  |
|288     |3.4414227 |478         |Scream (1996)                |
|121     |3.4382284 |429         |Independence Day (ID4) (1996)|
|300     |3.6310904 |431         |Air Force One (1997)         |
|258     |3.8035364 |509         |Contact (1997)               |
|100     |4.155512  |508         |Fargo (1996)                 |
+--------+----------+------------+-----------------------------+

Popular movies from Cassandra:
+--------+----------+------------+----------------------------------------------                                                                                                                                                             ----+
|movie_id|avg_rating|rating_count|title                                                                                                                                                                                                          |
+--------+----------+------------+----------------------------------------------                                                                                                                                                             ----+
|497     |3.8382354 |68          |Bringing Up Baby (1938)                                                                                                                                                                                        |
|13      |3.4184783 |184         |Mighty Aphrodite (1995)                                                                                                                                                                                        |
|379     |2.9767442 |43          |Tales From the Crypt Presents: Demon Knight (1                                                                                                                                                             995)|
|169     |4.4661016 |118         |Wrong Trousers, The (1993)                                                                                                                                                                                     |
|588     |3.7920792 |202         |Beauty and the Beast (1991)                                                                                                                                                                                    |
|30      |3.945946  |37          |Belle de jour (1967)                                                                                                                                                                                           |
|145     |2.4461539 |65          |Lawnmower Man, The (1992)                                                                                                                                                                                      |
|351     |2.7       |20          |Prophecy II, The (1998)                                                                                                                                                                                        |
|553     |3.2857144 |63          |Walk in the Clouds, A (1995)                                                                                                                                                                                   |
|639     |3.7       |40          |Tin Drum, The (Blechtrommel, Die) (1979)                                                                                                                                                                       |
+--------+----------+------------+----------------------------------------------                                                                                                                                                             ----+
only showing top 10 rows

Favourite genres from Cassandra:
+-------+------+------+-----------+
|user_id|genre |gender|genre_count|
+-------+------+------+-----------+
|497    |Action|M     |107        |
|497    |Comedy|M     |107        |
|13     |Drama |M     |218        |
|379    |Comedy|M     |72         |
|379    |Drama |M     |72         |
|588    |Drama |F     |95         |
|145    |Drama |M     |102        |
|553    |Drama |M     |48         |
|639    |Drama |F     |94         |
|889    |Drama |M     |125        |
+-------+------+------+-----------+
only showing top 10 rows

Young users from Cassandra:
+-------+---+------+-------------+--------+
|user_id|age|gender|occupation   |zip_code|
+-------+---+------+-------------+--------+
|588    |18 |F     |student      |93063   |
|30     |7  |M     |student      |55436   |
|528    |18 |M     |student      |55104   |
|674    |13 |F     |student      |55337   |
|375    |17 |M     |entertainment|37777   |
|851    |18 |M     |other        |29646   |
|859    |18 |F     |other        |06492   |
|813    |14 |F     |student      |02136   |
|52     |18 |F     |student      |55105   |
|397    |17 |M     |student      |27514   |
+-------+---+------+-------------+--------+
only showing top 10 rows

Scientist users from Cassandra:
+-------+---+------+----------+--------+
|user_id|age|gender|occupation|zip_code|
+-------+---+------+----------+--------+
|183    |33 |M     |scientist |27708   |
|107    |39 |M     |scientist |60466   |
|538    |31 |M     |scientist |21010   |
|272    |33 |M     |scientist |53706   |
|430    |38 |M     |scientist |98199   |
|643    |39 |M     |scientist |55122   |
|543    |33 |M     |scientist |95123   |
|730    |31 |F     |scientist |32114   |
|74     |39 |M     |scientist |T8H1N   |
|874    |36 |M     |scientist |37076   |
+-------+---+------+----------+--------+
only showing top 10 rows

[maria_dev@sandbox-hdp ~]$ vi a440.py

########################


$ cqlsh

# Inside cqlsh
cqlsh> CREATE KEYSPACE IF NOT EXISTS movielens WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'};

cqlsh> CREATE TABLE IF NOT EXISTS movielens.movie_ratings (
    movie_id int,
    title text,
    avg_rating float,
    PRIMARY KEY (movie_id)
);

cqlsh> CREATE TABLE IF NOT EXISTS movielens.top_ten_movies_avg_rating (
    movie_id int,
    title text,
    avg_rating float,
    rating_count int,
    PRIMARY KEY (movie_id)
);

cqlsh> CREATE TABLE IF NOT EXISTS movielens.top_ten_movies_rating_count (
    movie_id int,
    title text,
    avg_rating float,
    rating_count int,
    PRIMARY KEY (movie_id)
);

cqlsh> CREATE TABLE IF NOT EXISTS movielens.popular_movies (
    movie_id int,
    title text,
    avg_rating float,
    rating_count int,
    PRIMARY KEY (movie_id)
);

cqlsh> CREATE TABLE IF NOT EXISTS movielens.favourite_genres (
    user_id int,
    gender text,
    genre text,
    genre_count int,
    PRIMARY KEY (user_id, genre)
);

cqlsh> CREATE TABLE IF NOT EXISTS movielens.young_users (
    user_id int,
    age int,
    gender text,
    occupation text,
    zip_code text,
    PRIMARY KEY (user_id)
);

cqlsh> CREATE TABLE IF NOT EXISTS movielens.scientist_users (
    user_id int,
    age int,
    gender text,
    occupation text,
    zip_code text,
    PRIMARY KEY (user_id)
);
